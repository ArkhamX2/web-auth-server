spring:
  application:
    name: 'web-auth-server'
  datasource:
    url: 'jdbc:mariadb://${DATASOURCE_HOST}:${DATASOURCE_PORT}/${DATASOURCE_DATABASE}'
    username: '${DATASOURCE_USER}'
    password: '${DATASOURCE_PASSWORD}'
    driver-class-name: 'org.mariadb.jdbc.Driver'
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: 'update'
    properties:
      hibernate:
        dialect: 'org.hibernate.dialect.MariaDBDialect'

server:
  port: 8080

app:
  # Настройки авторизации при помощи JWT токенов.
  jwt:
    # Подписывающий ключ.
    # Используется алгоритм HS512.
    # Генерируется при помощи OpenSSL.
    secret-key: 'e2f007e4b5ef2f7bd580b78e5e8ed6a4bb7316966c4759fc71a7cb9d0f6bb9c258b57702fcaf6fab79ebbe72c6b7a6c5d1a52da61089d9f70629189dcd849366'
    # Настройки JWT токенов.
    token:
      # Название в заголовке HTTP запроса.
      header: 'Authorization'
      # Префикс в заголовке HTTP запроса.
      prefix: 'Bearer '
      # Жизненный цикл в секундах.
      lifetime-seconds: 3600
  # Настройки CORS.
  cors:
    # Разрешенный источник.
    allowed-origin: "http://localhost"

# Вывод кучи логов при каждом запросе.
# TODO: Не для продакшена.
logging:
  level:
    web: 'debug'
    org.springframework.security: 'debug'
